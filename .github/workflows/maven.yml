name: Build & Publish on Release Tag

on:
  push:
    tags:
      - 'Release*'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write    # needed for dependency submission on push to main
  packages: write    # future-proof if you also push to GHCR   # needed for dependency submission


jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      product: ${{ steps.filter.outputs.product }}
      order: ${{ steps.filter.outputs.order }}
      shared: ${{ steps.filter.outputs.shared }}
    steps:
      - uses: actions/checkout@v4
      - name: PathFilter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            product:
              - 'product-service/**'
            order:
              - 'order-service/**'
            shared:
              - 'pom.xml'
              - 'Dockerfile.module'
              - '.github/workflows/**'
  test-product:
    name: Test(product-service)
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.product=='true' || needs.changes.outputs.shared=='true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Run tests
        run: mvn -f product-service/pom.xml -ntp -B test
  docker-product:
    name: Docker Build & Push (product-service)
    runs-on: ubuntu-latest
    needs: test-product
    if: needs.changes.outputs.product == 'true' || needs.changes.outputs.shared == 'true'
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/product-service
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.module
          push: true
          build-args: |
            MODULE=product-service
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64  # optional

  # ---------- order-service ----------
  test-order:
    name: Test (order-service)
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.order == 'true' || needs.changes.outputs.shared == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - name: Run tests
        run: mvn -f order-service/pom.xml -ntp -B test

  docker-order:
    name: Docker Build & Push (order-service)
    runs-on: ubuntu-latest
    needs: test-order
    if: needs.changes.outputs.order == 'true' || needs.changes.outputs.shared == 'true'
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/order-service
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.module
          push: true
          build-args: |
            MODULE=order-service
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # platforms: linux/amd64,linux/arm64  # optional

  # Optional: submit dep graph once (only on main pushes)
  depgraph:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: changes
    steps:
      - uses: actions/checkout@v4
      - uses: advanced-security/maven-dependency-submission-action@v5
        with:
          directory: .
          ignore-maven-wrapper: true